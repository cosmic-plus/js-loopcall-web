{"version":3,"sources":["webpack://loopcall/webpack/universalModuleDefinition","webpack://loopcall/webpack/bootstrap","webpack://loopcall/./es5/index.js","webpack://loopcall/./node_modules/@babel/runtime/regenerator/index.js","webpack://loopcall/./node_modules/regenerator-runtime/runtime.js","webpack://loopcall/./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_regeneratorRuntime","_asyncToGenerator","loop","_x2","_x3","_loop","apply","this","arguments","mark","_callee2","callAnswer","limit","records","length","splitAt","tailRecords","wrap","_context2","prev","next","abrupt","concat","slice","sent","stop","loopWithBreakpoints","_x4","_x5","_loopWithBreakpoints","_callee3","options","index","nextRecord","_context3","t0","keys","t1","done","breaker","filter","push","_ref","_callee","callBuilder","callerLimit","_args","_context","undefined","Math","min","_x","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","fn","obj","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","iter","toString","reverse","pop","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","args"],"mappings":"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","file":"loopcall.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"loopcall\"] = factory();\n\telse\n\t\troot[\"loopcall\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use_strict\";\n/**\n * Concatenate records from `callBuilder` call response that pass `options.filter`\n * until `options.limit` is reached, `options.breaker` returns a true value or\n * no more are available.\n *\n * **Warning**: Please be aware that unlimited loopcall can iterate over the\n * full set of data available on a network, sending thousands of request to the\n * API. Please use it wisely :)\n *\n * @example\n * const callBuilder = server.transactions().forAccount('GDE...YBX')\n * const allTransactions = await loopcall(callBuilder)\n * const transactionsWithoutMemo = await loopcall(callBuilder, {\n *   filter: (tx) => !tx.memo\n * })\n * const thisYearTransactions = await loopcall(callBuilder, {\n *   breaker: (tx) => tx.created_at.substr(0,4) < 2018\n * })\n *\n * @example\n * const callBuilder = server.operations().order('asc')\n * const the2000firstOperations = await loopcall(callBuilder, { limit: 2000 })\n * const the20firstAccountCreations = await loopcall(callBuilder, {\n *   limit: 20,\n *   filter: (op) => op.type === 'create_account'\n * })\n *\n * @param {CallBuilder} callBuilder A CallBuilder object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(callBuilder) {\n    var options,\n        callerLimit,\n        callAnswer,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            callerLimit = options.limit ? Math.min(options.limit, 200) : 200;\n            _context.next = 4;\n            return callBuilder.limit(callerLimit).call();\n\n          case 4:\n            callAnswer = _context.sent;\n\n            if (!(options.filter || options.breaker)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", loopWithBreakpoints(callAnswer, options));\n\n          case 9:\n            return _context.abrupt(\"return\", loop(callAnswer, options.limit));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Concatenate records from `callAnswer` pages until `limit` is reached or no\n * more are available.\n *\n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {integer} limit The maximum number of record to return\n * @returns {Array} The fetched records\n */\n\n\nfunction loop(_x2, _x3) {\n  return _loop.apply(this, arguments);\n}\n/**\n * Concatenate records from `callAnswer` pages that pass `options.filter` until\n * `options.limit` is reached, `options.breaker` returns a true value or no more\n * are available.\n *\n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\n\n\nfunction _loop() {\n  _loop = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(callAnswer, limit) {\n    var records, length, splitAt, tailRecords;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            records = [];\n\n          case 1:\n            if (!callAnswer.records.length) {\n              _context2.next = 18;\n              break;\n            }\n\n            if (!limit) {\n              _context2.next = 12;\n              break;\n            }\n\n            length = records.length + callAnswer.records.length;\n\n            if (!(limit === length)) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", records.concat(callAnswer.records));\n\n          case 8:\n            if (!(length > limit)) {\n              _context2.next = 12;\n              break;\n            }\n\n            splitAt = limit - records.length;\n            tailRecords = callAnswer.records.slice(0, splitAt);\n            return _context2.abrupt(\"return\", records.concat(tailRecords));\n\n          case 12:\n            records = records.concat(callAnswer.records);\n            _context2.next = 15;\n            return callAnswer.next();\n\n          case 15:\n            callAnswer = _context2.sent;\n            _context2.next = 1;\n            break;\n\n          case 18:\n            return _context2.abrupt(\"return\", records);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loop.apply(this, arguments);\n}\n\nfunction loopWithBreakpoints(_x4, _x5) {\n  return _loopWithBreakpoints.apply(this, arguments);\n}\n\nfunction _loopWithBreakpoints() {\n  _loopWithBreakpoints = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(callAnswer, options) {\n    var records, index, nextRecord, recordTriggerBreak, recordPassTest;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            records = [];\n\n          case 1:\n            if (!callAnswer.records.length) {\n              _context3.next = 28;\n              break;\n            }\n\n            _context3.t0 = _regeneratorRuntime.keys(callAnswer.records);\n\n          case 3:\n            if ((_context3.t1 = _context3.t0()).done) {\n              _context3.next = 23;\n              break;\n            }\n\n            index = _context3.t1.value;\n\n            if (!(options.limit && records.length === options.limit)) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", records);\n\n          case 7:\n            nextRecord = callAnswer.records[index];\n\n            if (!options.breaker) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 11;\n            return options.breaker(nextRecord);\n\n          case 11:\n            recordTriggerBreak = _context3.sent;\n\n            if (!recordTriggerBreak) {\n              _context3.next = 14;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", records);\n\n          case 14:\n            if (!options.filter) {\n              _context3.next = 20;\n              break;\n            }\n\n            _context3.next = 17;\n            return options.filter(nextRecord);\n\n          case 17:\n            recordPassTest = _context3.sent;\n\n            if (recordPassTest) {\n              _context3.next = 20;\n              break;\n            }\n\n            return _context3.abrupt(\"continue\", 3);\n\n          case 20:\n            records.push(nextRecord);\n            _context3.next = 3;\n            break;\n\n          case 23:\n            _context3.next = 25;\n            return callAnswer.next();\n\n          case 25:\n            callAnswer = _context3.sent;\n            _context3.next = 1;\n            break;\n\n          case 28:\n            return _context3.abrupt(\"return\", records);\n\n          case 29:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _loopWithBreakpoints.apply(this, arguments);\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}